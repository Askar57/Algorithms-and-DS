def boyer_moore(text, pattern):
    m = len(pattern)  # Длина образца
    n = len(text)     # Длина текста
    skip = {}

    # Инициализация словаря skip, где каждый символ инициализируется значением m (длина образца)
    for k in range(256):
        skip[chr(k)] = m

    # Заполнение словаря skip с учетом последнего вхождения каждого символа образца
    for k in range(m - 1):
        skip[pattern[k]] = m - k - 1

    k = m - 1  # Индекс для текста

    while k < n:
        j = m - 1
        i = k

        # Проверяем с конца образца до его начала, сравнивая символы с текстом
        while j >= 0 and text[i] == pattern[j]:
            j -= 1
            i -= 1

        if j == -1:  # Если образец был найден в тексте
            return i + 1  # Возвращаем индекс начала образца в тексте

        # Если текущий символ текста не совпадает ни с одним символом образца,
        # вычисляем смещение для соответствующего символа текста из словаря skip
        # Если символ не найден в словаре, смещение равно m
        k += skip.get(text[k], m)

    return -1


text = "Cтрока найдена. Cтрока не найдена"
pattern = "не"
result = boyer_moore(text, pattern)

if result == -1:
    print("Cтрока не найдена")
else:
    print("Cтрока найдена. Её индекс начинается с", result)
